version: '3.9'
services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data_v15:/var/lib/postgresql/data
    env_file:
      - .docker.base.env
    networks:
      - dictionary_api_network
    # healthcheck:
    #   test: pg_isready -U postgres -h 127.0.0.1
    #   interval: 15s
    #   timeout: 5s
    #   start_period: 30s
    ports:
      - "5432:5432"

  backend:
    tty: true
    # uncomment if you need to exec something in container as root
    # user: root
    stdin_open: true
    ports:
      - 8000:8000
    build:
      context: .
      args:
        - REQUIREMENTS_FILE=base.txt
    image: dictionary-api-backend-dev
    depends_on:
      - postgres
    # Project data is already copied to the docker container. Uncomment for
    # development purposes to avoid rebuilding docker image every time for each
    # change in the code.
    volumes:
      - .:/app/
    networks:
      - dictionary_api_network
    env_file:
      - .docker.base.env

  tests:
    tty: true
    user: root
    stdin_open: true
    build:
      context: .
      args:
        - REQUIREMENTS_FILE=test.txt
    image: dictionary-api-backend-test
    depends_on:
      - postgres
    # Project data is already copied to the docker container. Uncomment for
    # development purposes to avoid rebuilding docker image every time for each
    # change in the code.
    volumes:
      - .:/app/
    networks:
      - dictionary_api_network
    command: pytest
    env_file:
      - .docker.base.env

networks:
  dictionary_api_network:

volumes:
  postgres_data_v15:
